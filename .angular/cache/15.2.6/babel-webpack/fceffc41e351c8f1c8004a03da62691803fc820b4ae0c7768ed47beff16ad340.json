{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport const TOAST_STATE = {\n  success: {\n    name: 'success-toast',\n    icon: 'fa-regular fa-circle-check'\n  },\n  warning: {\n    name: 'warning-toast',\n    icon: 'fa-solid fa-exclamation'\n  },\n  danger: {\n    name: 'danger-toast',\n    icon: 'fa-regular fa-circle-xmark'\n  },\n  info: {\n    name: 'info-toast',\n    icon: 'fa-regular fa-circle-question'\n  }\n};\nexport class ToastService {\n  constructor() {\n    this.showsToast$ = new BehaviorSubject(false);\n    this.toastMessage$ = new BehaviorSubject('Default toast message');\n    this.toastState$ = new BehaviorSubject(TOAST_STATE.success.name);\n    this.toastIcon$ = new BehaviorSubject(TOAST_STATE.success.icon);\n  }\n  showToast(toastState, toastMessage, toastIcon) {\n    this.toastState$.next(toastState);\n    this.toastIcon$.next(toastIcon);\n    this.toastMessage$.next(toastMessage);\n    this.showsToast$.next(true);\n  }\n  dismissToast() {\n    this.showsToast$.next(false);\n  }\n}\nToastService.ɵfac = function ToastService_Factory(t) {\n  return new (t || ToastService)();\n};\nToastService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ToastService,\n  factory: ToastService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,eAAe,QAAQ,MAAM;;AAGtC,OAAO,MAAMC,WAAW,GAAG;EACzBC,OAAO,EAAG;IAACC,IAAI,EAAC,eAAe;IACrBC,IAAI,EAAE;EAA4B,CAAC;EAC7CC,OAAO,EAAG;IAACF,IAAI,EAAE,eAAe;IACtBC,IAAI,EAAE;EAAyB,CAAC;EAC1CE,MAAM,EAAI;IAACH,IAAI,EAAC,cAAc;IACpBC,IAAI,EAAE;EAA4B,CAAC;EAC7CG,IAAI,EAAM;IAACJ,IAAI,EAAE,YAAY;IACnBC,IAAI,EAAE;EAA+B;CAChD;AAKD,OAAM,MAAOI,YAAY;EAKvBC;IAJO,gBAAW,GAA6B,IAAIT,eAAe,CAAU,KAAK,CAAC;IAC3E,kBAAa,GAA4B,IAAIA,eAAe,CAAS,uBAAuB,CAAC;IAC7F,gBAAW,GAA4B,IAAIA,eAAe,CAASC,WAAW,CAACC,OAAO,CAACC,IAAI,CAAC;IAC5F,eAAU,GAA4B,IAAIH,eAAe,CAASC,WAAW,CAACC,OAAO,CAACE,IAAI,CAAC;EAClF;EAEhBM,SAAS,CAACC,UAAkB,EAAEC,YAAoB,EAAEC,SAAiB;IACnE,IAAI,CAACC,WAAW,CAACC,IAAI,CAACJ,UAAU,CAAC;IACjC,IAAI,CAACK,UAAU,CAACD,IAAI,CAACF,SAAS,CAAC;IAC/B,IAAI,CAACI,aAAa,CAACF,IAAI,CAACH,YAAY,CAAC;IACrC,IAAI,CAACM,WAAW,CAACH,IAAI,CAAC,IAAI,CAAC;EAC7B;EAEAI,YAAY;IACV,IAAI,CAACD,WAAW,CAACH,IAAI,CAAC,KAAK,CAAC;EAC9B;;AAhBWP,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["BehaviorSubject","TOAST_STATE","success","name","icon","warning","danger","info","ToastService","constructor","showToast","toastState","toastMessage","toastIcon","toastState$","next","toastIcon$","toastMessage$","showsToast$","dismissToast","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\FE-TalesWeaver\\src\\app\\shared\\toast\\toast.service.ts"],"sourcesContent":["import { BehaviorSubject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport const TOAST_STATE = {\r\n  success:  {name:'success-toast',\r\n            icon: 'fa-regular fa-circle-check'},\r\n  warning:  {name: 'warning-toast',\r\n            icon: 'fa-solid fa-exclamation'},\r\n  danger:   {name:'danger-toast',\r\n            icon: 'fa-regular fa-circle-xmark'},\r\n  info:     {name: 'info-toast',\r\n            icon: 'fa-regular fa-circle-question'}\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastService {\r\n  public showsToast$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public toastMessage$: BehaviorSubject<string> = new BehaviorSubject<string>('Default toast message');\r\n  public toastState$: BehaviorSubject<string> = new BehaviorSubject<string>(TOAST_STATE.success.name);\r\n  public toastIcon$: BehaviorSubject<string> = new BehaviorSubject<string>(TOAST_STATE.success.icon);\r\n  constructor() { }\r\n\r\n  showToast(toastState: string, toastMessage: string, toastIcon: string): void {\r\n    this.toastState$.next(toastState);\r\n    this.toastIcon$.next(toastIcon);\r\n    this.toastMessage$.next(toastMessage);\r\n    this.showsToast$.next(true);\r\n  }\r\n\r\n  dismissToast(): void {\r\n    this.showsToast$.next(false);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}